name: workshop
services:
  # The Go application that we will observe
  example-app:
    build:
      context: ./example-app
      dockerfile: Dockerfile
    # # Uncomment this and comment out the 'build' block above, to use pre-built image if experiencing dependency issues
    # image: ghcr.io/j6nca/o11y-playground-example-api:latest
    container_name: example-app
    ports:
      - "8080:8080"
    environment:
      - OTEL_SERVICE_NAME=example-app
      # Sending example-app traces and profiling to alloy (OTEL collector)
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=alloy:4317
      - PYROSCOPE_SERVER_ADDRESS=http://alloy:4040
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/metrics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Add alertmanager for alert routing (so we can see alerts from vmalert)
  alertmanager:
    image: prom/alertmanager:v0.28.1
    volumes:
      - ./alertmanager/config.yml:/config/alertmanager.yml
    command:
      - "--config.file=/config/alertmanager.yml"
    ports:
      - 9093:9093
    restart: always

  # quick service health check overview for troubleshooting
  gatus:
    image: ghcr.io/twin/gatus:v5.22.0
    volumes:
      - ./gatus/config.yaml:/config/config.yaml
    ports:
      - 8888:8080

  # Add victoriametrics stack in place of mimir for metrics storage
  # VictoriaMetrics cluster components
  vminsert:
    image: victoriametrics/vminsert:v1.125.0-cluster
    command:
      - -replicationFactor=1
      - -storageNode=vmstorage:8400
    ports:
      - "8480:8480"
    depends_on:
      - vmstorage

  vmselect:
    image: victoriametrics/vmselect:v1.125.0-cluster
    command:
      - -storageNode=vmstorage:8401
    ports:
      - "8481:8481"
    depends_on:
      - vmstorage

  vmstorage:
    image: victoriametrics/vmstorage:v1.125.0-cluster
    command:
      - -retentionPeriod=1d
    ports:
      - "8401:8401"
      # metrics
      - "8482:8482"
    volumes:
      - ./vmstorage:/vmstorage

  # vmagent:
  #   image: victoriametrics/vmagent:v1.125.0
  #   command:
  #     - vm-agent
  #     - -promscrape.config=/etc/victoriametrics/prometheus.yml
  #     - -remoteWrite.url=http://vminsert:8480/insert/0/prometheus/api/v1/write
  #   volumes:
  #     - ./vmagent/prometheus.yml:/etc/victoriametrics/prometheus.yml
  #   depends_on:
  #     - vminsert

  # VictoriaMetrics Alertmanager
  vmalert:
    image: victoriametrics/vmalert:v1.125.0
    command:
      - -rule=/etc/vmalert/vmalert-rules.yml
      - -datasource.url=http://vmselect:8481/
      - -evaluationInterval=10s
      - -notifier.url=http://alertmanager:9093
    volumes:
      - ./vmalert/rules.yml:/etc/vmalert/vmalert-rules.yml
    ports:
      - "8880:8880"
    depends_on:
      - vmselect
      - alertmanager

  # Grafana for visualization and alerting
  # The Grafana dashboarding server.
  grafana:
    image: grafana/grafana:12.0.2
    volumes:
      - "./grafana/definitions:/var/lib/grafana/dashboards"
      - "./grafana/provisioning:/etc/grafana/provisioning"
    ports:
      - "3000:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch traceQLStreaming correlations metricsSummary traceqlEditor traceToMetrics traceToProfiles datatrails
      - GF_INSTALL_PLUGINS=grafana-lokiexplore-app,grafana-exploretraces-app,grafana-pyroscope-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    # depends_on:
    #   - victoriametrics
    #   - loki
    #   - tempo
    #   - pyroscope
    #   - vmalert
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # The Loki service stores logs sent to it, and takes queries from Grafana
  # to visualise those logs.
  loki:
    image: grafana/loki:3.5.1
    command:
      ["--pattern-ingester.enabled=true", "-config.file=/etc/loki/loki.yaml"]
    ports:
      - "3100:3100"
    volumes:
      - "./loki/loki.yaml:/etc/loki/loki.yaml"

  # Tempo for traces
  tempo:
    image: grafana/tempo:2.8.1
    ports:
      - "3200:3200"
      - "9411:9411"
      - "55680:55680"
      - "55681:55681"
      - "14250:14250"
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - "./tempo/tempo.yaml:/etc/tempo.yaml"

  pyroscope:
    image: grafana/pyroscope:1.13.5
    ports:
      - "4040:4040"
    command: ["server"]

  # Grafana Alloy batches and processes traces sent to it, generating
  # auto-logs from those traces.
  # Includes Metrics, Logs, Traces and Profiles.
  alloy:
    image: grafana/alloy:v1.9.1
    ports:
      - "12350:12350"
      - "12345:12345"
      - "12348:12348"
      - "6832:6832"
      - "55679:55679"
      - "4317:4317"
      - "4318:4318"
    expose:
      - "4040"
    volumes:
      - "./alloy/config.alloy:/etc/alloy/config.alloy"
      - "./alloy/endpoints.json:/etc/alloy/endpoints.json"
    command:
      [
        "run",
        "--server.http.listen-addr=0.0.0.0:12345",
        "--stability.level=public-preview",
        "/etc/alloy/config.alloy",
      ]

# volumes:
# loki-data:
# tempo-data:
# pyroscope-data:
# vmstorage-data:

networks:
  default:
    name: observability-net
    driver: bridge
