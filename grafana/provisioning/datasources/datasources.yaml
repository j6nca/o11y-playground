apiVersion: 1

datasources:
  - name: Loki
    type: loki
    access: proxy
    uid: loki
    url: http://loki:3100
    jsonData:
      derivedFields:
        - datasourceUid: tempo
          matcherRegex: "^.*?traceI[d|D]=(\\w+).*$"
          name: traceId
          url: "$${__value.raw}"

  - name: Tempo
    type: tempo
    access: proxy
    uid: tempo
    url: http://tempo:3200
    jsonData:
      nodeGraph:
        enabled: true
      serviceMap:
        datasourceUid: "Mimir"
      tracesToLogs:
        datasourceUid: loki
        filterByTraceID: false
        spanEndTimeShift: "500ms"
        spanStartTimeShift: "-500ms"
        tags: ["beast"]
    correlations:
      - targetUID: postgres
        label: "Count $$beast in table"
        description: ""
        config:
          type: query
          field: tags
          target:
            editorMode: code
            format: table
            rawQuery: true
            rawSql: "SELECT COUNT(*) FROM $$beast;"
            refId: A
            sql:
              columns:
                - parameters: []
                  type: function
              groupBy:
                - property:
                    type: string
                  type: groupBy
              limit: 50
          transformations:
            - type: regex
              expression: .*{"value":"(.*?)","key":"beast".*}
              mapValue: beast
      - targetUID: postgres
        label: "$$statement"
        description: "Runs the found DB statement in the span"
        config:
          type: query
          field: tags
          target:
            editorMode: code
            filters:
              - operator: "="
                scope: span
            format: table
            limit: 20
            queryType: traceqlSearch
            rawQuery: true
            rawSql: "$$statement;"
            refId: A
            sql:
              columns:
                - parameters: []
                  type: function
              groupBy:
                - property:
                    type: string
                  type: groupBy
              limit: 50
          transformations:
            - type: regex
              expression: .*{"value":"(.*?)","key":"db.statement".*}
              mapValue: statement

  # - name: Mimir
  #   type: prometheus
  #   access: proxy
  #   uid: mimir
  #   url: http://mimir:9009/prometheus
  #   jsonData:
  #     exemplarTraceIdDestinations:
  #       - datasourceUid: tempo
  #         name: traceID
  #     httpMethod: POST
  #     timeInterval: "2s"

  - name: Pyroscope
    type: phlare
    access: proxy
    uid: pyroscope
    url: http://pyroscope:4040
    jsonData:
      backendType: pyroscope

  - name: Postgres
    type: postgres
    uid: postgres
    url: mythical-database:5432
    user: postgres
    jsonData:
      database: postgres
      sslmode: disable
      postgresVersion: 1400
    secureJsonData:
      password: mythical

    # <string, required> Name of the VictoriaMetrics datasource
    # displayed in Grafana panels and queries.
  - name: VictoriaMetrics
    # <string, required> Sets the data source type.
    type: prometheus
    uid: prometheus
    # <string, required> Sets the access mode, either
    # proxy or direct (Server or Browser in the UI).
    # Some data sources are incompatible with any setting
    # but proxy (Server).
    access: proxy
    # <string> Sets default URL of the cluster version of VictoriaMetrics
    url: http://vmselect:8481/select/0/prometheus
    # <string> Sets the pre-selected datasource for new panels.
    # You can set only one default data source per organization.
    isDefault: true
