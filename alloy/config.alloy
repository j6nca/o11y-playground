///////////////////////////////////////////////////////////////////////////////
// Configuration file
local.file "endpoints" {
    // The endpoints file is used to define the endpoints, credentials and options
    // for the Alloy export to.
    filename = "/etc/alloy/endpoints.json"
}

// Enable this section to carry out live debugging when configuring Alloy.
livedebugging {
    enabled = true
}

///////////////////////////////////////////////////////////////////////////////
// Docker

// Get docker container targets from docker daemon
discovery.docker "containers" {
    host = "unix:///var/run/docker.sock"
}

discovery.relabel "containers" {
  targets = discovery.docker.containers.targets

  // Only keep our example store service targets
  rule {
    source_labels = ["__meta_docker_container_name"]
    action = "keep"
    regex = "/(store-.*)"
  }

  rule {
    source_labels = ["__meta_docker_container_name"]
    regex = "/(.*)"
    target_label = "service_name"
  }
}

///////////////////////////////////////////////////////////////////////////////
// Metrics scraping

prometheus.scrape "containers" {
  targets = discovery.relabel.containers.output
  forward_to = [prometheus.remote_write.metrics.receiver] // Replace with your remote write destination
  scrape_interval = "15s"
}

prometheus.remote_write "metrics" {
  endpoint {
    url = "http://vminsert:8480/insert/0/prometheus/api/v1/write"
  }
}

///////////////////////////////////////////////////////////////////////////////
// Logging

loki.source.docker "containers" {
    host = "unix:///var/run/docker.sock"
    targets = discovery.relabel.containers.output
    labels = {
        "job" = "alloy",
        "engine" = "docker",
    }
    forward_to = [loki.write.logs.receiver]
}

loki.write "logs" {
    endpoint {
        url = "http://loki:3100/loki/api/v1/push"
    }
}


///////////////////////////////////////////////////////////////////////////////
// Profiling

pyroscope.scrape "containers" {
  targets    = discovery.relabel.containers.output
  scrape_interval = "15s"
  profiling_config {
    profile.process_cpu {
        enabled = true
        path = "/debug/pprof/profile?seconds=10"
        delta = true
    }
    profile.memory {
        enabled = false
    }
    // These profile scrapers are enabled by default, but the app has no endpoints for them to scrape.  This results in a bunch of 404 errors in the Alloy logs which makes troubleshooting more difficult.
    // By disabling these scrapers, the Alloy logs are more readable.
    profile.goroutine {
        enabled = false
    }
    profile.block {
        enabled = false
    }
    profile.mutex {
        enabled = false
    }
  }
  forward_to = [pyroscope.write.profiles.receiver]
}

pyroscope.write "profiles" {
  endpoint {
    url = "pyroscope:4040"
  }
}

///////////////////////////////////////////////////////////////////////////////
// Tracing